1. Theoretical Questions:
    1.1 Can you explain what a compiler is and what it does?
        A compiler takes the syntax the user has written (code) and converts it into machine language that the computer can process and perform
    1.2 What is the difference between a compiled language and an interpreted language? Give examples.
        a compiled language like c++ requires that all the code is written already and must be compiled into an executable format to return
        an interpreted language like python or javascript doesn't have this requirement and evaluates each line in sequence within a global running context
    1.3 Can you briefly explain what Just-In-Time (JIT) compilation is?
        Rather than compiling an entire codebase at one time into one large executable, languages like Java and C# use JIT where the compiler waits until code is about to be executed before it fully compiles into machine language

2. Practical Question:
In JavaScript (an interpreted language), write a simple program that prompts the user for their name and then says "Hello" to them. Use the `prompt-sync` library for simplicity. You can install it with `npm install prompt-sync`.
Can I just use node's built in process tool instead of prompt-sync?
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

rl.question('What is your name? ', (name) => {
  console.log(`Hello, ${name}`);
  rl.close();
});